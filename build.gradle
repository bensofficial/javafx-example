plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

sourceCompatibility = 17
version = '1.0.0'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'de.tum.in.ase:artemis-java-test-sandbox:1.13.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation("org.testfx:testfx-core:4.0.16-alpha")
    testImplementation("org.testfx:testfx-junit5:4.0.16-alpha")

    testImplementation("org.testfx:openjfx-monocle:17.0.10")

    testImplementation("org.openjfx:javafx-base:17.0.2:win")
    testImplementation("org.openjfx:javafx-graphics:17.0.2:win")
    testImplementation("org.openjfx:javafx-controls:17.0.2:win")
}

javafx {
    version = "17.0.8"
    modules = ['javafx.base', 'javafx.graphics', 'javafx.controls']
}

def assignmentSrcDir = "assignment/src/main/java"
def studentOutputDir = sourceSets.main.java.destinationDirectory.get()

sourceSets {
    test {
        java {
            srcDir 'test'
        }
        resources {
            srcDir 'test'
        }
    }


    main {
        java {
            srcDirs = [assignmentSrcDir]
        }
        resources {
            srcDirs = ["assignment/src/main/resources"]
        }
    }
}

application {
    mainModule = "ExampleApp"
    mainClass = "de.tum.cit.ase.javafx.ExampleApp"
}

def forbiddenPackageFolders = [
                                "$studentOutputDir/ch/qos/logback/",
                                "$studentOutputDir/com/intellij/",
                                "$studentOutputDir/com/sun/",
                                "$studentOutputDir/de/tum/in/test/api/",
                                "$studentOutputDir/java/",
                                "$studentOutputDir/javax/",
                                "$studentOutputDir/jdk/",
                                "$studentOutputDir/net/jqwik/",
                                "$studentOutputDir/org/assertj/",
                                "$studentOutputDir/org/apache/",
                                "$studentOutputDir/org/eclipse/",
                                "$studentOutputDir/org/gradle/",
                                "$studentOutputDir/org/jacoco/",
                                "$studentOutputDir/org/json/",
                                "$studentOutputDir/org/junit/",
                                "$studentOutputDir/org/opentest4j/",
                                "$studentOutputDir/sun/",
                                "$studentOutputDir/worker/org/gradle/",
                                "$studentOutputDir/com/tngtech/archunit/",
                                "$studentOutputDir/com/github/javaparser/",
                                "$studentOutputDir/javafx/application/",
                                "$studentOutputDir/org/testfx/util/",
                                "$studentOutputDir/com/sun/javafx/application/",
]

test {
    doFirst {
        for (String packageFolder in forbiddenPackageFolders) {
            assert !file(packageFolder).exists(): "$packageFolder must not exist within the submission."
        }
    }
    defaultCharacterEncoding = 'UTF-8'
    testLogging.showStandardStreams = true
    useJUnitPlatform()

    systemProperty "glass.platform", "Monocle"
    systemProperty "monocle.platform", "Headless"
    systemProperty "prism.order", "sw"
    systemProperty "prism.text", "t2k"
}

